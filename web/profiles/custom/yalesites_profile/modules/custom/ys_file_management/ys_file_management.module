<?php

/**
 * @file
 * Contains main module functions for ys_file_management.
 */

use Drupal\ys_file_management\Form\YsMediaDeleteMultipleForm;
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\ys_file_management\Form\YsMediaDeleteForm;
use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_entity_type_alter().
 */
function ys_file_management_entity_type_alter(array &$entity_types) {
  if (!empty($entity_types['media'])) {
    assert($entity_types['media'] instanceof EntityTypeInterface);
    // Override the delete form with our custom form.
    $entity_types['media']->setFormClass('delete', YsMediaDeleteForm::class);
    // Override the bulk delete form with our custom form.
    $entity_types['media']->setFormClass('delete-multiple-confirm', YsMediaDeleteMultipleForm::class);
  }
}

/**
 * Implements hook_module_implements_alter().
 */
function ys_file_management_module_implements_alter(&$implementations, $hook) {
  if ($hook === 'entity_type_alter') {
    // Move our implementation to the end to ensure it runs after
    // media_file_delete.
    $group = $implementations['ys_file_management'];
    unset($implementations['ys_file_management']);
    $implementations['ys_file_management'] = $group;
  }
}

/**
 * Checks if a media entity has a file-based bundle that we should manage.
 *
 * @param \Drupal\Core\Entity\EntityInterface $media
 *   The media entity to check.
 *
 * @return bool
 *   TRUE if this is a file-based media bundle, FALSE otherwise.
 */
function ys_file_management_is_file_based_media(EntityInterface $media) {
  if ($media->getEntityTypeId() !== 'media') {
    return FALSE;
  }

  // Only handle media bundles that have physical files on the server.
  $file_based_bundles = ['image', 'document', 'background_video'];
  return in_array($media->bundle(), $file_based_bundles);
}
