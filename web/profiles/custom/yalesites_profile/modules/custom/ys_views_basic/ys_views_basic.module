<?php

/**
 * @file
 * Contains ys_views_basic.module functions.
 */

/**
 * Implements hook_theme().
 */
function ys_views_basic_theme($existing, $type, $theme, $path): array {
  return [
    // The default formatter will only be used for preview on the back-end.
    'views_basic_formatter_default' => [
      'variables' => [
        'view' => [],
        'exposed' => [],
      ],
    ],
    'views_basic_formatter_preview' => [
      'variables' => [
        'params' => [],
      ],
    ],
    'views_basic_rows' => [
      'variables' => [
        'card_collection_type' => NULL,
        'rows' => [],
        'parentNode' => NULL,
        'contentType' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_views_data().
 */
function ys_views_basic_views_data_alter(array &$data) {
  $data['node_field_data']['views_basic_sort'] = [
    'title' => t('Views Basic Sort'),
    'sort' => [
      'help' => t('Creates a dynamic sort from Views Basic fields.'),
      'id' => 'views_basic_sort',
    ],
  ];
  $data['node_field_data']['exclude_taxonomy_terms'] = [
    'title' => t('Exclude Taxonomy Terms'),
    'filter' => [
      'help' => t('Excludes taxonomy terms dynamically from the views tool'),
      'id' => 'exclude_taxonomy_terms',
    ],
  ];
  $data['node_field_data']['event_time_period'] = [
    'title' => t('Event Time Period'),
    'filter' => [
      'help' => t('Show future, past, or all events'),
      'id' => 'event_time_period',
    ],
  ];
  $data['node_field_data']['post_year_filter'] = [
    'title' => t('Year'),
    'filter' => [
      'help' => t('Filter posts by year based on publish date.'),
      'id' => 'post_year_filter',
    ],
  ];

}

/**
 * Implements hook_views_pre_build().
 */
function ys_views_basic_views_pre_build($view) {
  static $counter = 0;

  if (empty($view->dom_id)) {
    $view->dom_id = "view_" . $counter++;
  }
}
