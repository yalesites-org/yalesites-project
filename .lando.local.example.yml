# This repository contains a custom Pantheon Upstream used to create and manage
# every site on the YaleSites platform. Out of the box this project is not
# connected to any individual Drupal site. Setting a Pantheon site name and UUID
# allows lando to connect the local dev environment to a Pantheon environment.

# Copy and rename this file to .lando.local.yml and set any site specific
# variables and overrides. The default values in this file will connect to the
# YaleSite's integration environment.

# Set a local name for this application; this can be any value.
name: yalesites-platform
config:
  # 32 alphanumeric Pantheon site UUID.
  id: cb91b104-1d1e-42b7-a3a5-d0f6715e459c
  # Pantheon site name.
  site: yalesites-platform
tooling:
  drush:
    service: appserver
    env:
      # Set base url based on above Lando project 'name'.
      DRUSH_OPTIONS_URI: "https://yalesites-platform.lndo.site/"
      # Default xdebug to off
      XDEBUG_MODE: "off"
  xdebug-off:
    # Set environment variable to off, re-enable page caching, remove the xdebug ini and kill the process, clear the cache, and display message to user
    cmd: export XDEBUG_MODE=off && rm -f /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini && pkill -o -USR2 php-fpm && drush cr && echo "Xdebug disabled; turn back on with lando xdebug-on"
    description: Disable xdebug for nginx.
    service: appserver
    user: root
  # To use xdebug, you'll need to add a query string to your website visits.  For instance, to start it after running this command, you'll visit:
  # https://yalesites-platform.lndo.site/?XDEBUG_SESSION_START=1
  # The above query string tells PHP to start the debugging session.  From there you should be able to use the debuging environment of your choice.
  xdebug-on:
    # Set environment variable to debug, disable caching, remove any existing xdebug.ini so it can be remade, enable xdebug, restart php, clear cache, and display message to user
    cmd: export XDEBUG_MODE=debug && rm -f /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini && docker-php-ext-enable xdebug && pkill -o -USR2 php-fpm && drush cr && echo "Xdebug enabled; disable with lando xdebug-off"
    description: Enable xdebug for nginx.
    service: appserver
    user: root
services:
  appserver:
    overrides:
      environment:
        COMPOSER_PROCESS_TIMEOUT: 1800
        CUSTOMER_SECRETS_FAKE_FILE: /app/secrets.json
    # This is needed to expose the reverse proxy to the xdebug port (9003)
    xdebug: true
